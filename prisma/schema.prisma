datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Document {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  documentTitle String   @map("document_title") @db.VarChar(50)
  documentType  String   @map("document_type") @db.VarChar(50)
  documentPath  String   @map("document_path") @db.VarChar(1000)
  createdAt     DateTime @default(now()) @map("created_at")
  createdBy     String   @map("created_by") @db.VarChar(100)
  updatedAt     DateTime @updatedAt @map("updated_at")
  updatedBy     String   @map("updated_by") @db.VarChar(100)

  @@index([documentTitle, documentType])
  @@map("document")
}

model HoaBoard {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String   @map("name") @db.VarChar(150)
  addressLine1 String   @map("address_line1") @db.VarChar(50)
  addressLine2 String?  @map("address_line2") @db.VarChar(50)
  city         String   @map("city") @db.VarChar(50)
  state        String   @map("state") @db.VarChar(50)
  zipCode      String   @map("zip_code") @db.VarChar(15)
  createdAt    DateTime @default(now()) @map("created_at")
  createdBy    String   @map("created_by") @db.VarChar(100)
  updatedAt    DateTime @updatedAt @map("updated_at")
  updatedBy    String   @map("updated_by") @db.VarChar(100)

  communities Community[]
  members     HoaBoardMember[]
  @@index([name])
  @@index([city, state, zipCode])
  @@map("hoa_board")
}

model HoaBoardMember {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName  String    @map("first_name") @db.VarChar(50)
  middleName String?   @map("middle_name") @db.VarChar(50)
  lastName   String    @map("last_name") @db.VarChar(50)
  email      String?   @map("email") @db.VarChar(100)
  phone      String?   @map("phone") @db.VarChar(15)
  hoaBoard   HoaBoard? @relation(fields: [hoaBoardId], references: [id])
  hoaBoardId String    @map("hoaBoardId") @db.Uuid
  createdAt  DateTime  @default(now()) @map("created_at")
  createdBy  String    @map("created_by") @db.VarChar(100)
  updatedAt  DateTime  @updatedAt @map("updated_at")
  updatedBy  String    @map("updated_by") @db.VarChar(100)

  @@map("hoa_board_member")
}

model Community {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String    @map("name") @db.VarChar(150)
  addressLine1 String    @map("address_line1") @db.VarChar(50)
  addressLine2 String?   @map("address_line2") @db.VarChar(50)
  city         String    @map("city") @db.VarChar(50)
  state        String    @map("state") @db.VarChar(50)
  zipCode      String    @map("zip_code") @db.VarChar(15)
  imageUrl     String?   @map("image_url") @db.VarChar(500)
  hoaBoard     HoaBoard? @relation(fields: [hoaBoardId], references: [id])
  hoaBoardId   String?   @map("hoaBoardId") @db.Uuid
  createdAt    DateTime  @default(now()) @map("created_at")
  createdBy    String    @map("created_by") @db.VarChar(100)
  updatedAt    DateTime  @updatedAt @map("updated_at")
  updatedBy    String    @map("updated_by") @db.VarChar(100)

  amenities CommunityAmenity[]
  Property  Property[]
  @@index([name])
  @@index([city, state, zipCode])
  @@map("community")
}

model Amenity {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amenityName        String   @map("amenity_name") @db.VarChar(50)
  reservationAllowed String   @map("reservation_allowed") @db.VarChar(1)
  createdAt          DateTime @default(now()) @map("created_at")
  createdBy          String   @map("created_by") @db.VarChar(100)
  updatedAt          DateTime @updatedAt @map("updated_at")
  updatedBy          String   @map("updated_by") @db.VarChar(100)

  communityAmenities CommunityAmenity[]
  @@index([amenityName])
  @@map("amenity")
}

model CommunityAmenity {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  community   Community @relation(fields: [communityId], references: [id])
  communityId String    @map("communityId") @db.Uuid
  amenity     Amenity   @relation(fields: [amenityId], references: [id])
  amenityId   String    @map("amenityId") @db.Uuid
  createdAt   DateTime  @default(now()) @map("created_at")
  createdBy   String    @map("created_by") @db.VarChar(100)
  updatedAt   DateTime  @updatedAt @map("updated_at")
  updatedBy   String    @map("updated_by") @db.VarChar(100)

  reservations Reservation[]
  @@index([communityId, amenityId])
  @@map("community_amenity")
}

model Reservation {
  id                 String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  communityAmenity   CommunityAmenity @relation(fields: [communityAmenityId], references: [id])
  communityAmenityId String           @map("communityAmenityId") @db.Uuid
  startTime          DateTime         @map("start_time")
  endTime            DateTime         @map("end_time")
  paymentToken       String?          @map("payment_token") @db.VarChar(200)
  proprietor         Proprietor       @relation(fields: [proprietorId], references: [id])
  proprietorId       String           @map("proprietorId") @db.Uuid
  createdAt          DateTime         @default(now()) @map("created_at")
  createdBy          String           @map("created_by") @db.VarChar(100)
  updatedAt          DateTime         @updatedAt @map("updated_at")
  updatedBy          String           @map("updated_by") @db.VarChar(100)

  @@index([proprietorId])
  @@index([communityAmenityId])
  @@map("reservation")
}

model PaymentSource {
  id                     String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  paymentType            String     @map("payment_type") @db.VarChar(50) //ach or credit
  accountType            String     @map("account_type") @db.VarChar(50) //checkings or saving
  accountNumber          String     @map("account_number") @db.VarChar(50) //both account number
  routingNumber          String     @map("routing_number") @db.VarChar(50)
  accountHolderFirstname String     @map("account_holder_firstname") @db.VarChar(50)
  accountHolderLastname  String     @map("account_holder_lastname") @db.VarChar(50)
  proprietor             Proprietor @relation(fields: [proprietorId], references: [id])
  proprietorId           String     @map("proprietorId") @db.Uuid
  createdAt              DateTime   @default(now()) @map("created_at")
  createdBy              String     @map("created_by") @db.VarChar(100)
  updatedAt              DateTime   @updatedAt @map("updated_at")
  updatedBy              String     @map("updated_by") @db.VarChar(100)

  Payment Payment[]
  @@map("payment_source")
}

model Payment {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  paymentSource   PaymentSource @relation(fields: [paymentSourceId], references: [id])
  paymentSourceId String        @map("paymentSourceId") @db.Uuid
  paymentAmount   Decimal       @map("payment_amount") @db.Decimal
  paymentStatus   String        @map("payment_status") @db.VarChar(50) //processed or scheduled or declined
  paymentDate     DateTime      @default(now()) @map("payment_date")
  createdAt       DateTime      @default(now()) @map("created_at")
  createdBy       String        @map("created_by") @db.VarChar(100)
  updatedAt       DateTime      @updatedAt @map("updated_at")
  updatedBy       String        @map("updated_by") @db.VarChar(100)

  @@map("payment")
}

model Property {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  community    Community @relation(fields: [communityId], references: [id])
  communityId  String    @map("communityId") @db.Uuid
  addressLine1 String    @map("address_line1") @db.VarChar(50)
  addressLine2 String?   @map("address_line2") @db.VarChar(50)
  city         String    @map("city") @db.VarChar(50)
  state        String    @map("state") @db.VarChar(50)
  zipCode      String    @map("zip_code") @db.VarChar(15)
  createdAt    DateTime  @default(now()) @map("created_at")
  createdBy    String    @map("created_by") @db.VarChar(100)
  updatedAt    DateTime  @updatedAt @map("updated_at")
  updatedBy    String    @map("updated_by") @db.VarChar(100)

  PropertyOwner PropertyOwner[]
  @@index([city, state, zipCode])
  @@map("property")
}

model Proprietor {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName  String   @map("first_name") @db.VarChar(50)
  middleName String?  @map("middle_name") @db.VarChar(50)
  lastName   String   @map("last_name") @db.VarChar(50)
  email      String   @unique @map("email") @db.VarChar(100)
  phone      String?  @map("phone") @db.VarChar(15)
  userId     String?  @map("userId") @db.VarChar(100)
  createdAt  DateTime @default(now()) @map("created_at")
  createdBy  String   @map("created_by") @db.VarChar(100)
  updatedAt  DateTime @updatedAt @map("updated_at")
  updatedBy  String   @map("updated_by") @db.VarChar(100)

  PropertyOwner PropertyOwner[]
  PaymentSource PaymentSource[]
  Reservation   Reservation[]
  @@index([email])
  @@map("proprietor")
}

model PropertyOwner {
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  proprietor      Proprietor @relation(fields: [proprietorId], references: [id])
  proprietorId    String     @map("proprietorId") @db.Uuid
  property        Property   @relation(fields: [propertyId], references: [id])
  propertyId      String     @map("propertyId") @db.Uuid
  propertyDefault String?    @default("N") @map("property_default") @db.VarChar(1)
  endDate         DateTime?  @map("end_date")
  createdAt       DateTime   @default(now()) @map("created_at")
  createdBy       String     @map("created_by") @db.VarChar(100)
  updatedAt       DateTime   @updatedAt @map("updated_at")
  updatedBy       String     @map("updated_by") @db.VarChar(100)

  ServiceRequest ServiceRequest[]
  @@index([proprietorId, propertyId])
  @@map("property_owner")
}

model ServiceRequest {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  requestedService String        @map("requestedService") @db.VarChar(64)
  comments         String        @map("comments") @db.VarChar(512)
  status           String        @map("status") @db.VarChar(50)
  propertyOwner    PropertyOwner @relation(fields: [propertyOwnerId], references: [id])
  propertyOwnerId  String        @map("propertyOwnerId") @db.Uuid
  createdAt        DateTime      @default(now()) @map("created_at")
  createdBy        String        @map("created_by") @db.VarChar(100)
  updatedAt        DateTime      @updatedAt @map("updated_at")
  updatedBy        String        @map("updated_by") @db.VarChar(100)

  ServiceRequestDocuments ServiceRequestDocuments[]
  @@index([propertyOwnerId])
  @@map("service_request")
}

model ServiceRequestDocuments {
  id               String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  serviceRequest   ServiceRequest @relation(fields: [serviceRequestId], references: [id])
  serviceRequestId String         @map("serviceRequestId") @db.Uuid
  documentTitle    String         @map("document_title") @db.VarChar(50)
  documentType     String         @map("document_type") @db.VarChar(50)
  documentPath     String         @map("document_path") @db.VarChar(1000)
  uploadedAt       DateTime       @updatedAt @map("uploaded_at")
  uploadedBy       String         @map("uploaded_by") @db.VarChar(100)

  @@index([serviceRequestId])
  @@map("service_request_documents")
}
